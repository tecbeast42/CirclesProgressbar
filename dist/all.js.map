{"version":3,"sources":["bundle.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _exports = module.exports = {};\n\n(function ($) {\n\t_exports = $.fn.circlesProgress = function (options) {\n\t\tvar plugin = this;\n\t\tplugin.settings = {};\n\n\t\tvar percentToDegree = function percentToDegree(percent) {\n\t\t\treturn Math.round(3.6 * percent);\n\t\t};\n\n\t\tvar degreeToPercent = function degreeToPercent(degree) {\n\t\t\treturn Math.round(degree / 3.6);\n\t\t};\n\n\t\tplugin.init = function () {\n\t\t\tplugin.settings = $.extend({\n\t\t\t\tsize: 50,\n\t\t\t\tprogress: 0,\n\t\t\t\tinitialProgress: 0,\n\t\t\t\tattachedElement: plugin,\n\t\t\t\tenableTextIndicator: false,\n\t\t\t\tsvgElement: $('<svg><path class=\"cpb-border\"></path><path class=\"cpb-loader\"></path></svg>'),\n\t\t\t\ttextElement: $('<div class=\"cpb-text-indicator\" style=\"margin:0px;z-index:10;position:absolute;vertical-align:middle;top:0;left:0;text-align:center;\"></div>'),\n\t\t\t\ttextElementClass: 'cpb-text',\n\t\t\t\tdiplayPercentSign: false,\n\t\t\t\tinnerColor: '#000',\n\t\t\t\touterColor: '#F00',\n\t\t\t\tinnerOpacity: 1,\n\t\t\t\touterOpacity: 1,\n\t\t\t\tborderSize: 10,\n\t\t\t\tdebug: true,\n\t\t\t\talpha: 0,\n\t\t\t\tdeltaT: 5,\n\t\t\t\tanimate: true,\n\t\t\t\tcurrentAlpha: 0\n\t\t\t}, options);\n\n\t\t\tplugin.settings.alpha = percentToDegree(plugin.settings.progress);\n\t\t\tplugin.settings.currentAlpha = percentToDegree(plugin.settings.initialProgress);\n\n\t\t\tplugin.buildElements();\n\t\t\tplugin.animate();\n\t\t};\n\n\t\tplugin.buildElements = function () {\n\t\t\t//Set CSS of SVG Element\n\t\t\tplugin.settings.svgElement.css({\n\t\t\t\t'display': 'block',\n\t\t\t\t'height': plugin.settings.size,\n\t\t\t\t'width': plugin.settings.size,\n\t\t\t\t'transition': 'all 1s linear'\n\t\t\t});\n\n\t\t\t//Set position to relative on the attachedElement\n\t\t\tplugin.settings.attachedElement.css('position', 'relative');\n\n\t\t\t//Set Attributes of SVG Element\n\t\t\tplugin.settings.attachedElement.html(plugin.settings.svgElement.attr({\n\t\t\t\t'height': plugin.settings.size,\n\t\t\t\t'width': plugin.settings.size,\n\t\t\t\t'viewbox': '0 0 ' + plugin.settings.size + ' ' + plugin.settings.size\n\t\t\t}));\n\n\t\t\t//Set Attributes of Border Path Element\n\t\t\tplugin.settings.border = plugin.settings.svgElement.find('.cpb-border').attr({\n\t\t\t\t'transform': 'translate(' + plugin.settings.size / 2 + ', ' + plugin.settings.size / 2 + ')'\n\t\t\t});\n\n\t\t\t//Set Attributes of Loader Path Element\n\t\t\tplugin.settings.loader = plugin.settings.svgElement.find('.cpb-loader').attr({\n\t\t\t\t'transform': 'translate(' + plugin.settings.size / 2 + ', ' + plugin.settings.size / 2 + ') scale(' + (1 - plugin.settings.borderSize * 2 / plugin.settings.size) + ')'\n\t\t\t});\n\n\t\t\t//Set CSS of Loader Path Element\n\t\t\tplugin.settings.loader.css({\n\t\t\t\t'fill': plugin.settings.innerColor,\n\t\t\t\t'fill-opacity': plugin.settings.innerOpacity\n\t\t\t});\n\n\t\t\t//Set CSS of Border Path Element\n\t\t\tplugin.settings.border.css({\n\t\t\t\t'fill': plugin.settings.outerColor,\n\t\t\t\t'fill-opacity': plugin.settings.outerOpacity\n\t\t\t});\n\n\t\t\t//Append Textindicator element if need\n\t\t\tif (plugin.settings.enableTextIndicator) {\n\t\t\t\tplugin.settings.attachedElement.append(plugin.settings.textElement);\n\t\t\t}\n\t\t};\n\n\t\tplugin.animate = function () {\n\t\t\t// console.log(plugin.settings.alpha);\n\n\t\t\tif (!plugin.settings.animate) {\n\t\t\t\t//disable animation\n\t\t\t\tplugin.settings.currentAlpha = plugin.settings.alpha;\n\t\t\t}\n\n\t\t\tif (plugin.settings.currentAlpha > plugin.settings.alpha) {\n\t\t\t\t//calculate angle\n\t\t\t\tplugin.settings.currentAlpha--;\n\t\t\t} else if (plugin.settings.currentAlpha < plugin.settings.alpha) {\n\t\t\t\tplugin.settings.currentAlpha++;\n\t\t\t}\n\n\t\t\t// console.log(plugin.settings.currentAlpha);\n\t\t\tif (plugin.settings.currentAlpha == 360) {\n\t\t\t\tplugin.settings.currentAlpha = 359.99;\n\t\t\t}\n\n\t\t\tvar r = plugin.settings.currentAlpha * Math.PI / 180;\n\t\t\tvar x = Math.sin(r) * (plugin.settings.size / 2);\n\t\t\tvar y = Math.cos(r) * -(plugin.settings.size / 2);\n\t\t\tvar mid = plugin.settings.currentAlpha > 180 ? 1 : 0;\n\t\t\tvar anim = 'M 0 0 v -' + plugin.settings.size / 2 + ' A ' + plugin.settings.size / 2 + ' ' + plugin.settings.size / 2 + ' 1 ' + mid + ' 1 ' + x + ' ' + y + ' z';\n\n\t\t\tplugin.settings.loader.attr('d', anim);\n\t\t\tplugin.settings.border.attr('d', anim);\n\n\t\t\tif (plugin.settings.currentAlpha != plugin.settings.alpha && plugin.settings.currentAlpha != 359.99) {\n\t\t\t\tsetTimeout(plugin.animate, plugin.settings.deltaT);\n\t\t\t}\n\n\t\t\t//Display text if needed\n\t\t\tif (plugin.settings.enableTextIndicator) {\n\t\t\t\tplugin.settings.textElement.css({\n\t\t\t\t\theight: plugin.settings.size + 'px',\n\t\t\t\t\twidth: plugin.settings.size + 'px',\n\t\t\t\t\t'line-height': plugin.settings.size + 'px'\n\t\t\t\t});\n\t\t\t\tplugin.settings.textElement.addClass(plugin.settings.textElementClass);\n\t\t\t\tvar text = degreeToPercent(plugin.settings.currentAlpha) + (plugin.settings.diplayPercentSign ? '%' : '');\n\t\t\t\tplugin.settings.textElement.html(text);\n\t\t\t}\n\t\t};\n\n\t\tplugin.update = function (options) {\n\t\t\tplugin.settings = $.extend(plugin.settings, options);\n\t\t\tplugin.settings.alpha = percentToDegree(plugin.settings.progress);\n\t\t\tplugin.buildElements();\n\t\t\tplugin.animate();\n\t\t};\n\n\t\tplugin.init();\n\t\t// console.log(plugin);\n\t\treturn plugin;\n\t};\n})(jQuery);\n\n},{}]},{},[1]);\n"],"sourceRoot":"/source/"}